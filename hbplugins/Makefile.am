#
# Build instructions for hostboot's plugins library.
#

# Library to build
noinst_LIBRARIES = libhbplugins.a

# Source files: declaration and implementation of interfaces
libhbplugins_a_SOURCES = \
	errlplugins.H \
	errlplugins.cpp \
	errlplugins.hpp \
	errlusrparser.H \
	fsp_trace.cpp \
	hbplugins.cpp \
	hbplugins.hpp \
	srcisrc.H \
	symbols.cpp \
	utilmem.H

# Source files: HostBoot's plugins
nodist_libhbplugins_a_SOURCES = \
	$(HOSTBOOT_SRC_DIR)/src/usr/isteps/plugins/HWPF_COMP_ID_Parse.C \
	$(HOSTBOOT_SRC_DIR)/src/usr/isteps/nvdimm/plugins/NVDIMM_COMP_ID_Parse.C \
	$(HOSTBOOT_SRC_DIR)/src/usr/initservice/plugins/INITSVC_COMP_ID_Parse.C \
	$(HOSTBOOT_SRC_DIR)/src/usr/fsi/plugins/FSI_COMP_ID_Parse.C \
	$(HOSTBOOT_SRC_DIR)/src/usr/runtime/plugins/RUNTIME_COMP_ID_Parse.C \
	$(HOSTBOOT_SRC_DIR)/src/usr/hwas/plugins/HWAS_COMP_ID_Parse.C \
	$(HOSTBOOT_SRC_DIR)/src/usr/errl/plugins/ERRL_COMP_ID_Parse.C \
	$(HOSTBOOT_SRC_DIR)/src/usr/secureboot/common/plugins/SECURE_COMP_ID_Parse.C \
	$(HOSTBOOT_SRC_DIR)/src/usr/scom/plugins/SCOM_COMP_ID_Parse.C \
	$(HOSTBOOT_SRC_DIR)/src/usr/i2c/plugins/I2C_COMP_ID_Parse.C \
	$(HOSTBOOT_SRC_DIR)/src/usr/i2c/plugins/EEPROM_COMP_ID_Parse.C \
	$(HOSTBOOT_SRC_DIR)/src/usr/htmgt/plugins/HTMGT_COMP_ID_Parse.C \
	$(HOSTBOOT_SRC_DIR)/src/usr/vpd/plugins/VPD_COMP_ID_Parse.C \
	$(HOSTBOOT_SRC_DIR)/src/usr/mbox/plugins/MBOX_COMP_ID_Parse.C

# Plugins' directory for autogenerated files
PLUGINS_GEN_DIR = $(abs_builddir)/.gen
# HostBoot's directory for autogenerated files
HOSTBOOT_GEN_DIR = $(HOSTBOOT_SRC_DIR)/obj/genfiles

# Autogenerated source files: list of components
COMPONENTS_CPP = $(PLUGINS_GEN_DIR)/components.cpp
nodist_libhbplugins_a_SOURCES += $(COMPONENTS_CPP)
$(COMPONENTS_CPP): $(HOSTBOOT_SRC_DIR)/src/include/usr/hbotcompid.H
	$(MKDIR_P) $(@D)
	echo '/* This is an automatically generated file. */' > $@
	echo '#include "hbplugins.hpp"' >> $@
	echo '#include <map>' >> $@
	echo '#include <cinttypes>' >> $@
	echo 'namespace eSEL {' >> $@
	echo 'static const std::map<uint16_t, const char*> Components = {' >> $@
	$(GREP) '^const' $< | $(SED) 's/const compId_t.*\(0x.*\);/ { \1,/; s/const char.*\(".*"\);/   \1 },/; s/myname/NONE/' >> $@
	echo '};' >> $@
	echo 'std::string getComponentName(uint16_t id) {' >> $@
	echo '    auto it = Components.find(id);' >> $@
	echo '    if (it != Components.end())' >> $@
	echo '        return it->second;' >> $@
	echo '    char buf[24];' >> $@
	echo '    snprintf(buf, sizeof(buf), "Unknown [0x%04" PRIx16 "]", id);' >> $@
	echo '    return buf;' >> $@
	echo '}' >> $@
	echo '} // namespace eSEL' >> $@

# Autogenerated source files: components ids and source description plugins
HBFW_SRC_PARSERS_CPP = $(PLUGINS_GEN_DIR)/hbfwsrcparse.cpp
BUILT_SOURCES = $(HBFW_SRC_PARSERS_CPP)
nodist_libhbplugins_a_SOURCES += $(HBFW_SRC_PARSERS_CPP)
$(HBFW_SRC_PARSERS_CPP):
	$(SED) -i "s#!/usr/bin/perl#!$(HB_PERL)#" $(HOSTBOOT_SRC_DIR)/src/usr/errl/parser/genErrlParsers.pl
	make -C $(HOSTBOOT_SRC_DIR)/src/usr/errl/parser gen_errl_parsers
	$(MKDIR_P) $(@D)
	echo '/* This is an automatically generated file. */' > $@
	for SRC in $(HOSTBOOT_GEN_DIR)/plugins/hbfwSrcParse*.C; do \
		cat $${SRC} | \
		$(SED) "s/SrcDataParse/fx_$$(basename $${SRC%*.C})/g; \
		        s/g_SrcPlugin/reg_$$(basename $${SRC%*.C})/g; \
		        s/\"devdesc\"/\"Description\"/g; \
		        s/\"moduleid\"/\"Module ID\"/g; \
		        s/\"reasoncode\"/\"Reason code\"/g; \
		        s/\"userdata/\"Userdata/g"; \
	done >> $@

# Autogenerated source files: FAPI HWP error parser
FAPI_HWP_HPP = $(HOSTBOOT_GEN_DIR)/plugins/platHwpErrParser.H
BUILT_SOURCES += $(FAPI_HWP_HPP)
$(FAPI_HWP_HPP):
	$(SED) -i "s#!/usr/bin/perl#!$(HB_PERL)#" $(HOSTBOOT_SRC_DIR)/src/usr/fapi2/platCreateHwpErrParser.pl
	$(MKDIR_P) $(@D)
	make -C $(HOSTBOOT_SRC_DIR)/src/usr/fapi2 ../../../obj/genfiles/plugins/$(@F)

# Autogenerated source files: header for parsing attributes and targets
TARGETATTR_HPP = $(HOSTBOOT_GEN_DIR)/attributeenums.H
BUILT_SOURCES += $(TARGETATTR_HPP)
$(TARGETATTR_HPP):
	find $(HOSTBOOT_SRC_DIR)/src/usr/targeting -name "*.pl" -exec $(SED) -i "s#!/usr/bin/perl#!$(HB_PERL)#" {} \;
	make -C $(HOSTBOOT_SRC_DIR)/src/usr/targeting/xmltohb PERL5LIB=$(HOSTBOOT_SRC_DIR)/src/usr/targeting/xmltohb ../../../../obj/genfiles/$(@F)

# Build flags used for integration with HostBoot's source code
libhbplugins_a_CXXFLAGS = \
	-DPARSER \
	-idirafter$(HOSTBOOT_SRC_DIR)/src/include \
	-idirafter$(HOSTBOOT_SRC_DIR)/src/include/usr \
	-idirafter$(HOSTBOOT_SRC_DIR)/src/include/usr/errl \
	-idirafter$(HOSTBOOT_SRC_DIR)/src/usr/errl/plugins \
	-idirafter$(HOSTBOOT_GEN_DIR) \
	-idirafter$(HOSTBOOT_GEN_DIR)/plugins \
	-Wno-unused-parameter

# Clean generated files
clean-local: clean-local-tmp
.PHONY: clean-local-tmp
clean-local-tmp:
	-rm -rf $(PLUGINS_GEN_DIR) $(HOSTBOOT_GEN_DIR)/*
